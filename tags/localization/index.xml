<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>localization on boxmein</title><link>https://boxmein.github.io/tags/localization/</link><description>Recent content in localization on boxmein</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 29 Jul 2017 00:00:00 +0000</lastBuildDate><atom:link href="https://boxmein.github.io/tags/localization/index.xml" rel="self" type="application/rss+xml"/><item><title>Using Particle Filters to localize a car in 2D space</title><link>https://boxmein.github.io/posts/2017-07-29-using-particle-filters-to-localize-a-car-in-2d-space/</link><pubDate>Sat, 29 Jul 2017 00:00:00 +0000</pubDate><guid>https://boxmein.github.io/posts/2017-07-29-using-particle-filters-to-localize-a-car-in-2d-space/</guid><description>This is a discussion on how I implemented and finished the Particle Filters project in the Udacity Self-Driving Car Engineer Nanodegree.
The challenge Given a map of the world (a bunch of landmarks), and the car drawing lines to all landmarks within range with noisy data, give the best assumption for the car&amp;rsquo;s position in the world.
The process How I was going to solve it was with an approach called particle filters.</description></item></channel></rss>