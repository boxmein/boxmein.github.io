<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>programming on boxmein</title><link>https://boxmein.github.io/categories/programming/</link><description>Recent content in programming on boxmein</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 19 Aug 2017 00:00:00 +0000</lastBuildDate><atom:link href="https://boxmein.github.io/categories/programming/index.xml" rel="self" type="application/rss+xml"/><item><title>Unscented Kalman Filters</title><link>https://boxmein.github.io/posts/2017-08-19-unscented-kalman-filters/</link><pubDate>Sat, 19 Aug 2017 00:00:00 +0000</pubDate><guid>https://boxmein.github.io/posts/2017-08-19-unscented-kalman-filters/</guid><description>This post is about the Unscented Kalman Filters project. Unscented Kalman Filters are like a Level 2 version of Extended Kalman Filters.
When my code (hopefully) passes review, I&amp;rsquo;ve finished Term 2 of the Nanodegree. (I&amp;rsquo;ve been pushing forward for 7 months even though it feels like I just applied to enter the Nanodegree!)
Here&amp;rsquo;s a video of the Unscented Kalman Filter doing what it&amp;rsquo;s supposed to.
The red and blue dots are noisy sensor data, while the green dots are the Kalman filter deciding the car is somewhere in the middle of the sensor data.</description></item><item><title>Using Extended Kalman Filters for object tracking</title><link>https://boxmein.github.io/posts/2017-06-04-using-extended-kalman-filters-for-object-tracking/</link><pubDate>Sun, 04 Jun 2017 00:00:00 +0000</pubDate><guid>https://boxmein.github.io/posts/2017-06-04-using-extended-kalman-filters-for-object-tracking/</guid><description>This is a discussion of how I solved the Extended Kalman Filters project in the Udacity Self-Driving Car Engineer Nanodegree.
The problem Our car has two sensors: a lidar and a radar. Both can see a pedestrian. Based on the lidar and radar data (both a bit noisy), keep track of the pedestrian&amp;rsquo;s position and velocity.
The solution Kalman filters offer a solution that can combine both lidar and radar data to complement each other, and a robust object-tracking model that also keeps track of the error margins.</description></item></channel></rss>